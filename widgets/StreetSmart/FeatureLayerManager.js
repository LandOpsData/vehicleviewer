function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}define(['dojo/on','dojo/dom','esri/request','esri/geometry/Point','esri/geometry/Polygon','esri/geometry/ScreenPoint','esri/SpatialReference','./utils'],function(on,dom,esriRequest,Point,Polygon,ScreenPoint,SpatialReference,utils){'use strict';return function(){function FeatureLayerManager(_ref){var map=_ref.map,wkid=_ref.wkid,StreetSmartApi=_ref.StreetSmartApi,widget=_ref.widget;_classCallCheck(this,FeatureLayerManager);this.widget=widget;this.map=map;this.wkid=wkid;this.StreetSmartApi=StreetSmartApi}FeatureLayerManager.prototype._saveMeasurementsToLayer=function _saveMeasurementsToLayer(layer,measurementEvent){console.log(layer,measurementEvent);//this.layerUrl = layer.url;
var geometryType=measurementEvent.features[0].geometry.type;switch(geometryType){case'Point':return this.pointLayer(layer,measurementEvent);case'LineString':return this.lineLayer(layer,measurementEvent);case'Polygon':return this.polygonLayer(layer,measurementEvent);}};FeatureLayerManager.prototype._transformPoints=function _transformPoints(coords){var _this=this;var mapWkid=this.map.spatialReference.wkid;return coords.map(function(coord){// Ignore incomplete forward intersection:
if(_.includes(coord,null)){return null}var pointViewer=new Point(coord[0],coord[1],new SpatialReference({wkid:_this.wkid}));var coordMap=utils.transformProj4js(pointViewer,mapWkid);return[coordMap.x,coordMap.y,coord[2]]})};FeatureLayerManager.prototype.pointLayer=function pointLayer(layer,measurement){var coords=measurement.features[0].geometry.coordinates;if(coords===null){return}var zValue=coords[2];var transformedCoords=this._transformPoints([coords]);var pointJson=[{'geometry':{'x':transformedCoords[0][0],'y':transformedCoords[0][1],'z':zValue,'spatialReference':{'wkid':this.map.spatialReference.wkid}},'attributes':{}}];this._saveToFeatureLayer(layer,pointJson)};FeatureLayerManager.prototype.lineLayer=function lineLayer(layer,measurement){var coords=measurement.features[0].geometry.coordinates;var derivedData=measurement.features[0].properties.derivedData;var measuredDistance=derivedData.segmentLengths.value[0].toFixed(2)+derivedData.unit;if(coords===null){return}var transformedCoords=this._transformPoints(coords);var lineJson=[{'geometry':{'hasZ':true,'paths':[transformedCoords],'spatialReference':{'wkid':this.map.spatialReference.wkid}},'attributes':{Measurement:measuredDistance}}];this._saveToFeatureLayer(layer,lineJson)};FeatureLayerManager.prototype.polygonLayer=function polygonLayer(layer,measurement){var coords=measurement.features[0].geometry.coordinates[0];var derivedData=measurement.features[0].properties.derivedData;var polygonArea=derivedData.area.value.toFixed(2)+derivedData.unit;if(coords===null){return}var transformedCoords=this._transformPoints(coords);var polyJson=[{'geometry':{'hasZ':true,'rings':[transformedCoords],'spatialReference':{'wkid':this.map.spatialReference.wkid}},'attributes':{Measurement:polygonArea}}];this._saveToFeatureLayer(layer,polyJson)};FeatureLayerManager.prototype._saveToFeatureLayer=function _saveToFeatureLayer(layer,geomJson){var options={url:layer.url+'/applyEdits',content:{f:'json'},handleAs:'json'};options.content.adds=JSON.stringify(geomJson);var layerSaveRequest=esriRequest(options,{usePost:true});layerSaveRequest.then(function(response){layer.refresh();console.log('success'+JSON.stringify(response))},function(error){console.log('error'+error)})};return FeatureLayerManager}()});